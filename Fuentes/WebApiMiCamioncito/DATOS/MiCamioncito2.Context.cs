//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DATOS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MiCamioncito2Entities : DbContext
    {
        public MiCamioncito2Entities()
            : base("name=MiCamioncito2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Client> Client { get; set; }
        public DbSet<Costo_Servicio> Costo_Servicio { get; set; }
        public DbSet<Empleado> Empleado { get; set; }
        public DbSet<Empleado_Servicio> Empleado_Servicio { get; set; }
        public DbSet<Servicio> Servicio { get; set; }
        public DbSet<Tipo_Carga> Tipo_Carga { get; set; }
        public DbSet<Tipo_Cliente> Tipo_Cliente { get; set; }
        public DbSet<Tipo_Empleado> Tipo_Empleado { get; set; }
        public DbSet<Vehiculo> Vehiculo { get; set; }
    
        public virtual int SP_MC2_EDITAR_VEHICULO(Nullable<int> iD, Nullable<int> capacidad, Nullable<int> consumo, Nullable<int> distancia, Nullable<int> disponibilidad, Nullable<int> costoDepreciacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("Capacidad", capacidad) :
                new ObjectParameter("Capacidad", typeof(int));
    
            var consumoParameter = consumo.HasValue ?
                new ObjectParameter("Consumo", consumo) :
                new ObjectParameter("Consumo", typeof(int));
    
            var distanciaParameter = distancia.HasValue ?
                new ObjectParameter("Distancia", distancia) :
                new ObjectParameter("Distancia", typeof(int));
    
            var disponibilidadParameter = disponibilidad.HasValue ?
                new ObjectParameter("Disponibilidad", disponibilidad) :
                new ObjectParameter("Disponibilidad", typeof(int));
    
            var costoDepreciacionParameter = costoDepreciacion.HasValue ?
                new ObjectParameter("CostoDepreciacion", costoDepreciacion) :
                new ObjectParameter("CostoDepreciacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MC2_EDITAR_VEHICULO", iDParameter, capacidadParameter, consumoParameter, distanciaParameter, disponibilidadParameter, costoDepreciacionParameter);
        }
    
        public virtual int SP_MC2_ELIMINAR_VEHICULO(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MC2_ELIMINAR_VEHICULO", iDParameter);
        }
    
        public virtual int SP_MC2_INSERTAR_VEHICULO(Nullable<int> capacidad, Nullable<int> consumo, Nullable<int> distancia, Nullable<int> disponibilidad, Nullable<int> costoDepreciacion, Nullable<int> tC_id)
        {
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("Capacidad", capacidad) :
                new ObjectParameter("Capacidad", typeof(int));
    
            var consumoParameter = consumo.HasValue ?
                new ObjectParameter("Consumo", consumo) :
                new ObjectParameter("Consumo", typeof(int));
    
            var distanciaParameter = distancia.HasValue ?
                new ObjectParameter("Distancia", distancia) :
                new ObjectParameter("Distancia", typeof(int));
    
            var disponibilidadParameter = disponibilidad.HasValue ?
                new ObjectParameter("Disponibilidad", disponibilidad) :
                new ObjectParameter("Disponibilidad", typeof(int));
    
            var costoDepreciacionParameter = costoDepreciacion.HasValue ?
                new ObjectParameter("CostoDepreciacion", costoDepreciacion) :
                new ObjectParameter("CostoDepreciacion", typeof(int));
    
            var tC_idParameter = tC_id.HasValue ?
                new ObjectParameter("TC_id", tC_id) :
                new ObjectParameter("TC_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MC2_INSERTAR_VEHICULO", capacidadParameter, consumoParameter, distanciaParameter, disponibilidadParameter, costoDepreciacionParameter, tC_idParameter);
        }
    
        public virtual ObjectResult<SP_MC2_LISTADO_CLIENTES_Result> SP_MC2_LISTADO_CLIENTES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MC2_LISTADO_CLIENTES_Result>("SP_MC2_LISTADO_CLIENTES");
        }
    
        public virtual int SP_MIC2_EDITAR_CLIENTE(Nullable<int> iD, string nombre)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MIC2_EDITAR_CLIENTE", iDParameter, nombreParameter);
        }
    
        public virtual int SP_MIC2_EDITAR_EMPLEADO(Nullable<int> iD, Nullable<int> estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MIC2_EDITAR_EMPLEADO", iDParameter, estadoParameter);
        }
    
        public virtual int SP_MIC2_ELIMINAR_CLIENTE(Nullable<int> iD, string nombre)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MIC2_ELIMINAR_CLIENTE", iDParameter, nombreParameter);
        }
    
        public virtual int SP_MIC2_ELIMINAR_EMPLEADO(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MIC2_ELIMINAR_EMPLEADO", iDParameter);
        }
    
        public virtual int SP_MIC2_INSERTAR_CLIENTE(string nombre, Nullable<int> tCLI_Id)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tCLI_IdParameter = tCLI_Id.HasValue ?
                new ObjectParameter("TCLI_Id", tCLI_Id) :
                new ObjectParameter("TCLI_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MIC2_INSERTAR_CLIENTE", nombreParameter, tCLI_IdParameter);
        }
    
        public virtual int SP_MIC2_INSERTAR_COSTO_SERVICIO(Nullable<int> sRV_Id, Nullable<int> viaticos, Nullable<int> gastosAdd)
        {
            var sRV_IdParameter = sRV_Id.HasValue ?
                new ObjectParameter("SRV_Id", sRV_Id) :
                new ObjectParameter("SRV_Id", typeof(int));
    
            var viaticosParameter = viaticos.HasValue ?
                new ObjectParameter("Viaticos", viaticos) :
                new ObjectParameter("Viaticos", typeof(int));
    
            var gastosAddParameter = gastosAdd.HasValue ?
                new ObjectParameter("GastosAdd", gastosAdd) :
                new ObjectParameter("GastosAdd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MIC2_INSERTAR_COSTO_SERVICIO", sRV_IdParameter, viaticosParameter, gastosAddParameter);
        }
    
        public virtual int SP_MIC2_INSERTAR_EMPLEADO(string nombre, Nullable<int> estado, Nullable<int> tEMP_Id)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var tEMP_IdParameter = tEMP_Id.HasValue ?
                new ObjectParameter("TEMP_Id", tEMP_Id) :
                new ObjectParameter("TEMP_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MIC2_INSERTAR_EMPLEADO", nombreParameter, estadoParameter, tEMP_IdParameter);
        }
    
        public virtual int SP_MIC2_INSERTAR_EMPLEADO_SERVICIO(Nullable<int> eMP_Id, Nullable<int> servicio_Id)
        {
            var eMP_IdParameter = eMP_Id.HasValue ?
                new ObjectParameter("EMP_Id", eMP_Id) :
                new ObjectParameter("EMP_Id", typeof(int));
    
            var servicio_IdParameter = servicio_Id.HasValue ?
                new ObjectParameter("Servicio_Id", servicio_Id) :
                new ObjectParameter("Servicio_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MIC2_INSERTAR_EMPLEADO_SERVICIO", eMP_IdParameter, servicio_IdParameter);
        }
    
        public virtual int SP_MIC2_INSERTAR_SERVICIO(Nullable<int> vH_Id, Nullable<int> cLT_Id, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string direccionInicio, string direccionFin, Nullable<int> refencia_Papeleria)
        {
            var vH_IdParameter = vH_Id.HasValue ?
                new ObjectParameter("VH_Id", vH_Id) :
                new ObjectParameter("VH_Id", typeof(int));
    
            var cLT_IdParameter = cLT_Id.HasValue ?
                new ObjectParameter("CLT_Id", cLT_Id) :
                new ObjectParameter("CLT_Id", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var direccionInicioParameter = direccionInicio != null ?
                new ObjectParameter("DireccionInicio", direccionInicio) :
                new ObjectParameter("DireccionInicio", typeof(string));
    
            var direccionFinParameter = direccionFin != null ?
                new ObjectParameter("DireccionFin", direccionFin) :
                new ObjectParameter("DireccionFin", typeof(string));
    
            var refencia_PapeleriaParameter = refencia_Papeleria.HasValue ?
                new ObjectParameter("Refencia_Papeleria", refencia_Papeleria) :
                new ObjectParameter("Refencia_Papeleria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MIC2_INSERTAR_SERVICIO", vH_IdParameter, cLT_IdParameter, fechaInicioParameter, fechaFinParameter, direccionInicioParameter, direccionFinParameter, refencia_PapeleriaParameter);
        }
    }
}
